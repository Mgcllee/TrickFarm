name: Deploy TrickFarm to Azure

on:
  push:
    branches:
      - main
    # 커밋 메시지에 [1.0.0] 같은 버전 정보가 있어야 실행되며, [update]가 있으면 실행 안 함
    paths-ignore:
      - '**/*.md'

jobs:
  check-commit:
    runs-on: ubuntu-latest
    outputs:
      version_tag: ${{ steps.extract.outputs.version }}
      should_run: ${{ steps.check.outputs.run }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Extract version from commit message
        id: extract
        shell: bash
        run: |
          message="$(git log -1 --pretty=%B)"
          echo "Commit message: $message"
          if [[ "$message" =~ \[([0-9]+\.[0-9]+\.[0-9]+)\] ]]; then
            version="${BASH_REMATCH[1]}"
            echo "Found version: $version"
            echo "version=$version" >> $GITHUB_OUTPUT
          else
            echo "No version found"
            echo "version=none" >> $GITHUB_OUTPUT
          fi

      - name: Check if commit contains [update]
        id: check
        shell: bash
        run: |
          message="$(git log -1 --pretty=%B)"
          if [[ "$message" =~ \[update\] ]]; then
            echo "run=false" >> $GITHUB_OUTPUT
          elif [[ "$message" =~ \[[0-9]+\.[0-9]+\.[0-9]+\] ]]; then
            echo "run=true" >> $GITHUB_OUTPUT
          else
            echo "run=false" >> $GITHUB_OUTPUT
          fi

  build-and-deploy:
    needs: check-commit
    if: needs.check-commit.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.check-commit.outputs.version_tag }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        run: echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_REGISTRY }} -u ${{ secrets.ACR_USERNAME }} --password-stdin


      - name: Build and push WebApp image
        run: |
          docker build -t ${{ secrets.ACR_REGISTRY }}/trickfarmwebapp:$VERSION ./TrickFarmServer/TrickFarmWebApp
          docker push ${{ secrets.ACR_REGISTRY }}/trickfarmwebapp:$VERSION

      - name: Build and push Server image
        run: |
          docker build -f TrickFarmServer/TrickFarmServer/Dockerfile -t ${{ secrets.ACR_REGISTRY }}/trickfarmserver:$VERSION TrickFarmServer/TrickFarmServer
          docker push ${{ secrets.ACR_REGISTRY }}/trickfarmserver:$VERSION
          
      - name: Notify Slack of success
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "channel": "server_error",
              "text": "ACR에 TrickFarm ${{ env.VERSION }} 버전 배포 성공"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          VERSION: ${{ needs.check-commit.outputs.version_tag }}
      
      - name: Set up SSH private key
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            
      - name: Add VM to known_hosts
        run: |
            ssh-keyscan -H ${{ secrets.VM_WEB_PUBLICIP }} >> ~/.ssh/known_hosts
            
      - name: SSH to Azure VM and run commands
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM_WEB_PUBLICIP }}
          username: ${{ secrets.VM_WEB_VM_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY_VM_WEB_SERVER }}
          port: 22
          script: |
            az acr login --name ${{ env.ACR_REGISTRY }}
            docker stop trickfarmwebapp || true
            docker rm trickfarmwebapp || true
            docker run -d -p 8081:8081 -v /home/leemc9902/dataprotection-keys:/app/dataprotection-keys --name trickfarmwebapp ${{ env.ACR_REGISTRY }}/trickfarmwebapp:${{ env.VERSION }}
        env:
          ACR_REGISTRY: ${{ secrets.ACR_REGISTRY }}
          VERSION: ${{ needs.check-commit.outputs.version_tag }}
    
      - name: Notify Slack of success
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "channel": "server_error",
              "text": "VM에 TrickFarm Web Server ${{ env.VERSION }} 버전 실행 성공"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          VERSION: ${{ needs.check-commit.outputs.version_tag }}
