name: Deploy TrickFarm to Azure

on:
  push:
    branches:
      - main
    # 커밋 메시지에 [1.0.0] 같은 버전 정보가 있어야 실행되며, [update]가 있으면 실행 안 함
    paths-ignore:
      - '**/*.md'

jobs:
  check-commit:
    runs-on: ubuntu-latest
    outputs:
      version_tag: ${{ steps.extract.outputs.version }}
      should_run: ${{ steps.check.outputs.run }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Extract version from commit message
        id: extract
        run: |
          message="$(git log -1 --pretty=%B)"
          echo "Commit message: $message"
          if [[ "$message" =~ \[([0-9]+\.[0-9]+\.[0-9]+)\] ]]; then
            version="${BASH_REMATCH[1]}"
            echo "Found version: $version"
            echo "version=$version" >> $GITHUB_OUTPUT
          else
            echo "No version found"
            echo "version=none" >> $GITHUB_OUTPUT

      - name: Check if commit contains [update]
        id: check
        run: |
          message="$(git log -1 --pretty=%B)"
          if [[ "$message" =~ \[update\] ]]; then
            echo "run=false" >> $GITHUB_OUTPUT
          elif [[ "$message" =~ \[[0-9]+\.[0-9]+\.[0-9]+\] ]]; then
            echo "run=true" >> $GITHUB_OUTPUT
          else
            echo "run=false" >> $GITHUB_OUTPUT

  build-and-deploy:
    needs: check-commit
    if: needs.check-commit.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.check-commit.outputs.version_tag }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: mgcllee.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push WebApp image
        run: |
          docker build -t mgcllee.azurecr.io/trickfarmwebapp:$VERSION ./TrickFarmWebApp
          docker push mgcllee.azurecr.io/trickfarmwebapp:$VERSION

      - name: Build and push Server image
        run: |
          docker build -t mgcllee.azurecr.io/trickfarmserver:$VERSION ./TrickFarmServer
          docker push mgcllee.azurecr.io/trickfarmserver:$VERSION

      - name: Deploy to WebApp VM
        run: |
          ssh mgcllee@[공용주소작성] \
            "docker stop trickfarmwebapp || true && \
             docker rm trickfarmwebapp || true && \
             docker run -d --name trickfarmwebapp -p 8081:8081 mgcllee.azurecr.io/trickfarmwebapp:$VERSION"
        continue-on-error: true

      - name: Deploy to Server VM
        run: |
          ssh mgcllee@[공용주소작성] \
            "docker stop trickfarmserver || true && \
             docker rm trickfarmserver || true && \
             docker network create trickfarmnet || true && \
             docker run -d --name redis --network trickfarmnet redis && \
             docker run -d --name trickfarmserver --network trickfarmnet -p 8080:8080 -p 5000:5000 mgcllee.azurecr.io/trickfarmserver:$VERSION"
        continue-on-error: true

      - name: Notify Slack of success
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "channel": "트릭팜알림",
              "attachments": [
                {
                  "color": "good",
                  "text": "✅ TrickFarm ${VERSION} 버전 배포 성공"
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: https://hooks.slack.com/services/트릭팜

      - name: Rollback and notify Slack on failure
        if: failure()
        run: |
          echo "Deploy failed. Rolling back..."
          ssh mgcllee@[공용주소작성] "
            docker rm -f trickfarmwebapp || true && \
            docker run -d --name trickfarmwebapp -p 8081:8081 mgcllee.azurecr.io/trickfarmwebapp:previous"

          ssh mgcllee@[공용주소작성] "
            docker rm -f trickfarmserver || true && \
            docker run -d --name trickfarmserver --network trickfarmnet -p 8080:8080 -p 5000:5000 mgcllee.azurecr.io/trickfarmserver:previous"

          curl -X POST -H 'Content-type: application/json' --data '{
            "channel": "트릭팜알림",
            "attachments": [{
              "color": "danger",
              "text": "❌ TrickFarm ${VERSION} 배포 실패 및 롤백 완료"
            }]
          }' https://hooks.slack.com/services/트릭팜
